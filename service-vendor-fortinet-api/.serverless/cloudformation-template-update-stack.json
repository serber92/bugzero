{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "FortinetDashbugDashsvcLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/vendor-fortinet-api-qa-staging-fortinet-bug-svc"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "vendor-fortinet-api",
                  "qa-staging",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vendor-fortinet-api-qa-staging*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vendor-fortinet-api-qa-staging*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds",
                    "secretsmanager:PutSecretValue"
                  ],
                  "Resource": "arn:aws:secretsmanager:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "SNS:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::ImportValue": "SNSEventMgmtTopic"
                    },
                    {
                      "Fn::ImportValue": "SNSServiceTriggerTopic"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "vendor-fortinet-api",
              "qa-staging",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-78265dc7-7413-41eb-9b34-ef83b8d7da43"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "FortinetDashbugDashsvcLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "FortinetDashbugDashsvcLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/vendor-fortinet-api/qa-staging/1646765327185-2022-03-08T18:48:47.185Z/vendor-fortinet-api.zip"
        },
        "Handler": "s_fortinet_bug_svc.handler",
        "Runtime": "python3.7",
        "FunctionName": "vendor-fortinet-api-qa-staging-fortinet-bug-svc",
        "MemorySize": 1024,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "STAGE": "qa-staging",
            "BUGS_TABLE": "bugs",
            "MANAGED_PRODUCTS_TABLE": "managedProducts",
            "SETTINGS_TABLE": "settings",
            "SERVICES_TABLE": "services",
            "SERVICE_EXECUTION_TABLE": "serviceExecutions",
            "VENDORS_TABLE": "vendors",
            "VENDOR_PRODUCT_FAMILIES_TABLE": "vendorProductFamilies",
            "DB_PORT": {
              "Fn::ImportValue": "DbRdsEndpointPort"
            },
            "DB_HOST": {
              "Fn::ImportValue": "DbRdsEndpointAddress"
            },
            "DB_NAME": {
              "Fn::ImportValue": "DbRdsName"
            },
            "DB_USER": {
              "Fn::ImportValue": "DbRdsUser"
            },
            "DB_PASS": {
              "Fn::ImportValue": "DbRdsPass"
            },
            "EVENT_CLASS": "vendor-fortinet-api",
            "NODE": "qa-staging",
            "SNS_TOPIC": {
              "Fn::ImportValue": "SNSEventMgmtTopic"
            },
            "SERVICE_SNS_TOPIC_ARN": {
              "Fn::ImportValue": "SNSServiceTriggerTopic"
            },
            "BUG_EVENT_PROCESSOR_SERVICE_NAME": "bugEventProcessor"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::ImportValue": "VPCSecurityGroupId"
            }
          ],
          "SubnetIds": [
            {
              "Fn::ImportValue": "PrivateSubnet1"
            },
            {
              "Fn::ImportValue": "PrivateSubnet2"
            }
          ]
        }
      },
      "DependsOn": [
        "FortinetDashbugDashsvcLogGroup"
      ]
    },
    "FortinetDashbugDashsvcLambdaVersionVcDb9QasboOosQPfxmTUDFEESkyvtcN1zQcvM6mwDI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FortinetDashbugDashsvcLambdaFunction"
        },
        "CodeSha256": "6J+z95aEuBRVOqzNd81F3IZEmPTMW3AND6TLeEYn0t0="
      }
    },
    "FortinetDashbugDashsvcEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(15 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "FortinetDashbugDashsvcLambdaFunction",
                "Arn"
              ]
            },
            "Id": "fortinet-bug-svcSchedule"
          }
        ]
      }
    },
    "FortinetDashbugDashsvcLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FortinetDashbugDashsvcLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "FortinetDashbugDashsvcEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "FortinetDashbugDashsvcSnsSubscriptionSNSServiceTriggerTopic": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Fn::ImportValue": "SNSServiceTriggerTopic"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "FortinetDashbugDashsvcLambdaFunction",
            "Arn"
          ]
        },
        "FilterPolicy": {
          "service": [
            "fortinet"
          ]
        }
      }
    },
    "FortinetDashbugDashsvcLambdaPermissionSNSServiceTriggerTopicSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FortinetDashbugDashsvcLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Fn::ImportValue": "SNSServiceTriggerTopic"
        }
      }
    },
    "CWLSubFilterFortinetDashbugDashsvcLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:78265dc7-7413-41eb-9b34-ef83b8d7da43#WhNylGx7PF18BNB2qq#vendor-fortinet-api#qa-staging",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "FortinetDashbugDashsvcLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-vendor-fortinet-api-qa-staging-ServerlessDeploymentBucketName"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": "sls-vendor-fortinet-api-qa-staging-EnterpriseLogAccessIamRole"
      }
    },
    "FortinetDashbugDashsvcLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FortinetDashbugDashsvcLambdaVersionVcDb9QasboOosQPfxmTUDFEESkyvtcN1zQcvM6mwDI"
      },
      "Export": {
        "Name": "sls-vendor-fortinet-api-qa-staging-FortinetDashbugDashsvcLambdaFunctionQualifiedArn"
      }
    }
  }
}
